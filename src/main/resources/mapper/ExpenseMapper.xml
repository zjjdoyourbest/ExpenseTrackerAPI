<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.mapper.ExpenseMapper">

    <resultMap id="ExpenseMap" type="org.example.type.Expense">
        <id property="id" column="id"/>
        <result property="typeId" column="type_id"/>
        <result property="typeName" column="type_name"/>
        <result property="amount" column="amount"/>
        <result property="detial" column="detial"/>
        <result property="expenseDate" column="expense_date"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>


    <select id="getAllExpense" resultMap="ExpenseMap" >
        SELECT a.*,b.type_name as type_name FROM expense a Join typeslist b on a.type_id = b.id order by a.id
    </select>

    <select id="getAllExpenseById" resultMap="ExpenseMap">
        SELECT a.*,b.type_name as type_name FROM expense a Join typeslist b on a.type_id = b.id where a.id=#{id} order by a.id
    </select>

    <select id="getTypeName" resultType="String">
        SELECT a.type_name FROM typeslist a where a.id=#{typeId} order by a.id
    </select>

    <select id="getAllExpenseByExpenseDate" resultMap="ExpenseMap">
        <![CDATA[SELECT a.*,b.type_name as type_name FROM expense a Join typeslist b on a.type_id = b.id where a.expense_date>=#{startDate} and a.expense_date<=#{endDate} order by a.id]]>
    </select>

    <select id="getAllExpenseByCreateDate" resultMap="ExpenseMap">
        <![CDATA[SELECT a.*,b.type_name as type_name FROM expense a Join typeslist b on a.type_id = b.id where a.create_time>=#{startDate} and a.create_time<=#{endDate} order by a.id]]>
    </select>

    <select id="getAllExpenseByUpdateDate" resultMap="ExpenseMap">
        <![CDATA[SELECT a.*,b.type_name as type_name FROM expense a Join typeslist b on a.type_id = b.id where a.update_time>=#{startDate} and a.update_time<=#{endDate} order by a.id]]>
    </select>

    <insert id="insert" parameterType="org.example.type.Expense" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO expense( type_id, amount,detial,expense_date)
        VALUES (#{typeId}, #{amount}, #{detial}, #{expenseDate})
    </insert>

    <update id="update" parameterType="org.example.type.Expense">
        UPDATE expense
        <set>
            <if test="typeId != null">type_id = #{typeId},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="detial != null">detial = #{detial},</if>
            <if test="expenseDate != null">expense_date = #{expenseDate},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        DELETE FROM expense WHERE id =#{id}
    </delete>
</mapper>
